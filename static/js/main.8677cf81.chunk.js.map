{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setIsReversed","NONE","sortType","setSortType","items","goods","visibleList","sort","item1","item2","ALPHABET","localeCompare","LENGTH","length","reverse","reoderGoods","className","type","classNames","onClick","map","item","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAgCE,IAAME,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASH,EAASM,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAmBMC,EA1CD,SACLC,EADK,GAGJ,IADCH,EACF,EADEA,SAAUH,EACZ,EADYA,WAENO,EAAW,YAAOD,GAcxB,OAZAC,EAAYC,MAAK,SAACC,EAAOC,GACvB,OAAQP,GACN,KAAKP,EAASe,SAAU,OAAOF,EAAMG,cAAcF,GACnD,KAAKd,EAASiB,OAAQ,OAAOJ,EAAMK,OAASJ,EAAMI,OAClD,QAAS,OAAO,MAIhBd,GACFO,EAAYQ,UAGPR,EAwBOS,CAAYnB,EAAiB,CAAEG,aAAYG,aAEzD,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UAEE,wBACEC,KAAK,SACLD,UAAWE,IAAW,iBAAkB,CACtC,WAAYhB,IAAaP,EAASe,WAEpCS,QA5Be,WACrBhB,EAAYR,EAASe,WAsBjB,iCAUA,wBACEO,KAAK,SACLD,UAAWE,IAAW,oBAAqB,CACzC,WAAYhB,IAAaP,EAASiB,SAEpCO,QAlCa,WACnBhB,EAAYR,EAASiB,SA4BjB,4BAUA,wBACEK,KAAK,SACLD,UAAWE,IAAW,oBAAqB,CACzC,YAAanB,IAEfoB,QAxCQ,WACdnB,GAAeD,IAkCX,sBAUEG,IAAaP,EAASM,MAAQF,IAC9B,wBACEkB,KAAK,SACLD,UAAU,4BACVG,QA7CI,WACZnB,GAAc,GACdG,EAAYR,EAASM,OAwCf,sBAUJ,6BACGG,EAAMgB,KAAI,SAAAC,GACT,OACE,6BAAgBA,GAAPA,YCtHrBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8677cf81.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReoderOptions = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport function reoderGoods(\n  goods: string[],\n  { sortType, isReversed } :ReoderOptions,\n) {\n  const visibleList = [...goods];\n\n  visibleList.sort((item1, item2) => {\n    switch (sortType) {\n      case SortType.ALPHABET: return item1.localeCompare(item2);\n      case SortType.LENGTH: return item1.length - item2.length;\n      default: return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleList.reverse();\n  }\n\n  return visibleList;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const sortByAlphabet = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const sortByLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const reverse = () => {\n    setIsReversed(!isReversed);\n  };\n\n  const reset = () => {\n    setIsReversed(false);\n    setSortType(SortType.NONE);\n  };\n\n  const items = reoderGoods(goodsFromServer, { isReversed, sortType });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n\n        <button\n          type=\"button\"\n          className={classNames('button is-info', {\n            'is-light': sortType !== SortType.ALPHABET,\n          })}\n          onClick={sortByAlphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button is-success', {\n            'is-light': sortType !== SortType.LENGTH,\n          })}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button is-warning', {\n            'is-light': !isReversed,\n          })}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        {(sortType !== SortType.NONE || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {items.map(item => {\n          return (\n            <li key={item}>{item}</li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}